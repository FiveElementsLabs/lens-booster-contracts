/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  LensCampaign,
  LensCampaignInterface,
} from "../../contracts/LensCampaign";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract ERC20",
        name: "_asset",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getMirrorValue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lensHub",
    outputs: [
      {
        internalType: "contract ILensHub",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lensHubAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "profileId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "profileIdPointed",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "pubIdPointed",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "referenceModuleData",
            type: "bytes",
          },
          {
            internalType: "address",
            name: "referenceModule",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "referenceModuleInitData",
            type: "bytes",
          },
        ],
        internalType: "struct DataTypes.MirrorData",
        name: "vars",
        type: "tuple",
      },
    ],
    name: "mirrorWrapper",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "publicationId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "setPublication",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract ERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60c060405273db46d1dc155634fbc732f92e853b10b288ad5a1d60805234801561002857600080fd5b50604051610787380380610787833981016040819052610047916100b1565b61005033610061565b6001600160a01b031660a0526100e1565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100c357600080fd5b81516001600160a01b03811681146100da57600080fd5b9392505050565b60805160a05161067b61010c6000396000818161018b01526102de0152600060de015261067b6000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c8063934fa45311610071578063934fa453146101315780639f2c68511461013a578063b02cfdc31461014d578063b6b55f2514610160578063f2fde38b14610173578063fc0c546a1461018657600080fd5b80630b53fdf2146100ae57806316e43ffc146100c45780635dfadbdb146100d9578063715018a6146101185780638da5cb5b14610120575b600080fd5b60005b6040519081526020015b60405180910390f35b6100d76100d236600461043e565b6101ad565b005b6101007f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016100bb565b6100d7610224565b6000546001600160a01b0316610100565b6100b160025481565b6100d7610148366004610480565b610263565b600154610100906001600160a01b031681565b6100d761016e366004610480565b610292565b6100d76101813660046104b5565b610353565b6101007f000000000000000000000000000000000000000000000000000000000000000081565b600154604051632faeed8160e01b81526001600160a01b0390911690632faeed81906101dd908490600401610546565b6020604051808303816000875af11580156101fc573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061022091906105d5565b5050565b6000546001600160a01b031633146102575760405162461bcd60e51b815260040161024e906105ee565b60405180910390fd5b61026160006103ee565b565b6000546001600160a01b0316331461028d5760405162461bcd60e51b815260040161024e906105ee565b600255565b6000546001600160a01b031633146102bc5760405162461bcd60e51b815260040161024e906105ee565b6040516323b872dd60e01b8152336004820152306024820152604481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906323b872dd906064016020604051808303816000875af115801561032f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102209190610623565b6000546001600160a01b0316331461037d5760405162461bcd60e51b815260040161024e906105ee565b6001600160a01b0381166103e25760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161024e565b6103eb816103ee565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561045057600080fd5b813567ffffffffffffffff81111561046757600080fd5b820160c0818503121561047957600080fd5b9392505050565b60006020828403121561049257600080fd5b5035919050565b80356001600160a01b03811681146104b057600080fd5b919050565b6000602082840312156104c757600080fd5b61047982610499565b6000808335601e198436030181126104e757600080fd5b830160208101925035905067ffffffffffffffff81111561050757600080fd5b80360383131561051657600080fd5b9250929050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60208152813560208201526020820135604082015260408201356060820152600061057460608401846104d0565b60c0608085015261058960e08501828461051d565b91506001600160a01b0390506105a160808601610499565b1660a08401526105b460a08501856104d0565b848303601f190160c08601526105cb83828461051d565b9695505050505050565b6000602082840312156105e757600080fd5b5051919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60006020828403121561063557600080fd5b8151801515811461047957600080fdfea26469706673582212205d8716f4ddd60553b17f208c6475cc1032f049338807e5e6b35303d20d32bde764736f6c634300080a0033";

type LensCampaignConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LensCampaignConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LensCampaign__factory extends ContractFactory {
  constructor(...args: LensCampaignConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _asset: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<LensCampaign> {
    return super.deploy(_asset, overrides || {}) as Promise<LensCampaign>;
  }
  override getDeployTransaction(
    _asset: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_asset, overrides || {});
  }
  override attach(address: string): LensCampaign {
    return super.attach(address) as LensCampaign;
  }
  override connect(signer: Signer): LensCampaign__factory {
    return super.connect(signer) as LensCampaign__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LensCampaignInterface {
    return new utils.Interface(_abi) as LensCampaignInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LensCampaign {
    return new Contract(address, _abi, signerOrProvider) as LensCampaign;
  }
}
